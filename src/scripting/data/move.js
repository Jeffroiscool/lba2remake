import * as ms from '../process/move';
import * as lo from '../process/operators';
import Indent from '../indent';

export const MoveOpcode = [
    { opcode: 0x00, command: "END", callback: lo.END, indent: Indent.ZERO },
    { opcode: 0x01, command: "NOP", callback: lo.NOP, indent: Indent.ONE },
    { opcode: 0x02, command: "BODY", callback: ms.BODY, args: ['Int8'], indent: Indent.ONE },
    { opcode: 0x03, command: "ANIM", callback: ms.ANIM, args: ['Uint16'], indent: Indent.ONE },
    { opcode: 0x04, command: "GOTO_POINT", callback: ms.GOTO_POINT, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x05, command: "WAIT_ANIM", callback: ms.WAIT_ANIM, indent: Indent.ONE },
    { opcode: 0x06, command: "LOOP", callback: lo.NOP, indent: Indent.ONE },
    { opcode: 0x07, command: "ANGLE", callback: ms.ANGLE, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x08, command: "POS_POINT", callback: ms.POS_POINT, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x09, command: "TRACK", callback: ms.TRACK, args: ['Uint8'], indent: Indent.ZERO },
    { opcode: 0x0A, command: "GOTO", callback: ms.GOTO, args: ['Uint16:offset'], indent: Indent.ONE },
    { opcode: 0x0B, command: "STOP", callback: ms.STOP, indent: Indent.ONE },
    { opcode: 0x0C, command: "GOTO_SYM_POINT", callback: ms.GOTO_SYM_POINT, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x0D, command: "WAIT_NUM_ANIM", callback: ms.WAIT_NUM_ANIM, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x0E, command: "SAMPLE", callback: ms.SAMPLE, args: ['Uint16'], indent: Indent.ONE },
    { opcode: 0x0F, command: "GOTO_POINT_3D", callback: ms.GOTO_POINT_3D, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x10, command: "SPEED", callback: ms.SPEED, args: ['Uint16'], indent: Indent.ONE },
    { opcode: 0x11, command: "BACKGROUND", callback: ms.BACKGROUND, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x12, command: "WAIT_NUM_SECOND", callback: ms.WAIT_NUM_SECOND, args: ['Uint8', 'Uint32'], indent: Indent.ONE },
    { opcode: 0x13, command: "NO_BODY", callback: ms.NO_BODY, indent: Indent.ONE },
    { opcode: 0x14, command: "BETA", callback: ms.BETA, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x15, command: "OPEN_LEFT", callback: ms.OPEN_LEFT, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x16, command: "OPEN_RIGHT", callback: ms.OPEN_RIGHT, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x17, command: "OPEN_UP", callback: ms.OPEN_UP, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x18, command: "OPEN_DOWN", callback: ms.OPEN_DOWN, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x19, command: "CLOSE", callback: ms.CLOSE, indent: Indent.ONE },
    { opcode: 0x1A, command: "WAIT_DOOR", callback: ms.WAIT_DOOR, indent: Indent.ONE },
    { opcode: 0x1B, command: "SAMPLE_RND", callback: ms.SAMPLE_RND, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x1C, command: "SAMPLE_ALWAYS", callback: ms.SAMPLE_ALWAYS, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x1D, command: "SAMPLE_STOP", callback: ms.SAMPLE_STOP, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x1E, command: "PLAY_SMK", callback: ms.PLAY_ACF, indent: Indent.ONE },
    { opcode: 0x1F, command: "REPEAT_SAMPLE", callback: ms.REPEAT_SAMPLE, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x20, command: "SIMPLE_SAMPLE", callback: ms.SIMPLE_SAMPLE, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x21, command: "FACE_HERO", callback: ms.FACE_HERO, args: ['Uint16'], indent: Indent.ONE },
    { opcode: 0x22, command: "ANGLE_RND", callback: ms.ANGLE_RND, args: ['Int16', 'Uint16'], indent: Indent.ONE },
    { opcode: 0x23, command: "REPLACE", callback: ms.REPLACE, indent: Indent.ZERO },
    { opcode: 0x24, command: "WAIT_NUM_DSEC", callback: ms.WAIT_NUM_DSEC, args: ['Uint8', 'Uint32'], indent: Indent.ONE },
    { opcode: 0x25, command: "DO", callback: lo.NOP, indent: Indent.ONE },
    { opcode: 0x26, command: "SPRITE", callback: ms.SPRITE, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x27, command: "WAIT_NUM_SECOND_RND", callback: ms.WAIT_NUM_SECOND_RND, args: ['Uint8', 'Uint32'], indent: Indent.ONE },
    { opcode: 0x28, command: "AFF_TIMER", callback: lo.NOP, indent: Indent.ONE },
    { opcode: 0x29, command: "SET_FRAME", callback: ms.SET_FRAME, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x2A, command: "SET_FRAME_3DS", callback: ms.SET_FRAME_3DS, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x2B, command: "SET_START_3DS", callback: ms.SET_START_3DS, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x2C, command: "SET_END_3DS", callback: ms.SET_END_3DS, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x2D, command: "START_ANIM_3DS", callback: ms.START_ANIM_3DS, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x2E, command: "STOP_ANIM_3DS", callback: ms.STOP_ANIM_3DS, indent: Indent.ONE },
    { opcode: 0x2F, command: "WAIT_ANIM_3DS", callback: ms.WAIT_ANIM_3DS, indent: Indent.ONE },
    { opcode: 0x30, command: "WAIT_FRAME_3DS", callback: ms.WAIT_FRAME_3DS, indent: Indent.ONE },
    { opcode: 0x31, command: "WAIT_NUM_DECIMAL_RND", callback: ms.WAIT_NUM_DECIMAL_RND, args: ['Uint8', 'Uint32'], indent: Indent.ONE },
    { opcode: 0x32, command: "INTERVAL", callback: ms.INTERVAL, args: ['Uint16'], indent: Indent.ONE },
    { opcode: 0x33, command: "FREQUENCY", callback: ms.FREQUENCY, args: ['Uint16'], indent: Indent.ONE },
    { opcode: 0x34, command: "VOLUME", callback: ms.VOLUME, args: ['Uint8'], indent: Indent.ONE }
];

